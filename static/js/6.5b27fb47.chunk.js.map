{"version":3,"sources":["assets/utils/api.js","assets/utils/utils.js","redux/posts/posts.actions.js","redux/posts/posts.selectors.js","../node_modules/@material-ui/core/esm/Accordion/AccordionContext.js","../node_modules/@material-ui/core/esm/Accordion/Accordion.js","../node_modules/@babel/runtime/helpers/esm/toArray.js","../node_modules/@material-ui/core/esm/AccordionSummary/AccordionSummary.js","../node_modules/@material-ui/core/esm/AccordionDetails/AccordionDetails.js","../node_modules/@material-ui/core/esm/internal/svg-icons/Person.js","../node_modules/@material-ui/core/esm/Avatar/Avatar.js","../node_modules/@material-ui/core/esm/colors/deepOrange.js","../node_modules/@material-ui/icons/esm/ExpandMore.js","../node_modules/@material-ui/icons/esm/Edit.js","../node_modules/@material-ui/icons/esm/Delete.js","redux/comments/comments.actions.js","redux/comments/comments.selectors.js","modules/post/post.component.jsx"],"names":["baseUrl","process","postRequest","url","data","config","axios","post","putRequest","put","get","remove","delete","loadingDiv","document","getElementById","loadingText","showSpinner","spinnerText","style","visibility","innerText","hideSpinner","getPostsAsync","dispatch","type","PostsActionTypes","GET_POSTS_START","then","res","posts","GET_POSTS_SUCCESS","payload","catch","err","error","message","GET_POSTS_FAILURE","getPostAsync","params","id","GET_POST_START","GET_POST_SUCCESS","GET_POST_FAILURE","createPostAsync","getState","CREATE_POST_START","object","objects","CREATE_POST_SUCCESS","CREATE_POST_FAILURE","updatePostAsync","UPDATE_POST_START","UPDATE_POST_SUCCESS","UPDATE_POST_FAILURE","deletePostAsync","postId","DELETE_POST_START","objectId","DELETE_POST_SUCCESS","DELETE_POST_FAILURE","selectPosts","state","selectBlogPosts","createSelector","selectPost","getPostsError","getPostError","AccordionContext","React","Accordion","props","ref","arr","childrenProp","children","classes","className","_props$defaultExpande","defaultExpanded","_props$disabled","disabled","expandedProp","expanded","onChange","_props$square","square","_props$TransitionComp","TransitionComponent","Collapse","TransitionProps","other","_objectWithoutProperties","_useControlled","useControlled","controlled","default","name","_useControlled2","_slicedToArray","setExpandedState","handleChange","event","_React$Children$toArr","toArray","_React$Children$toArr2","arrayWithHoles","iterableToArray","unsupportedIterableToArray","nonIterableRest","summary","slice","contextValue","toggle","Paper","_extends","clsx","root","rounded","Provider","value","in","timeout","role","withStyles","theme","transition","duration","transitions","shortest","position","create","left","top","right","height","content","opacity","backgroundColor","palette","divider","display","margin","marginTop","marginBottom","action","disabledBackground","borderRadius","borderTopLeftRadius","shape","borderTopRightRadius","borderBottomLeftRadius","borderBottomRightRadius","AccordionSummary","expandIcon","focusVisibleClassName","_props$IconButtonProp","IconButtonProps","onClick","_React$useContext","_React$useContext$dis","ButtonBase","focusRipple","disableRipple","component","focusVisible","focused","IconButton","edge","tabIndex","minHeight","padding","spacing","cursor","focus","disabledOpacity","flexGrow","transform","AccordionDetails","createSvgIcon","d","Avatar","alt","_props$component","Component","imgProps","sizes","src","srcSet","_props$variant","variant","loaded","_ref","_React$useState","setLoaded","active","image","Image","onload","onerror","useLoaded","hasImg","hasImgNotFailing","img","Person","fallback","system","colorDefault","alignItems","justifyContent","flexShrink","width","fontFamily","typography","fontSize","pxToRem","lineHeight","overflow","userSelect","color","background","grey","circle","circular","textAlign","objectFit","textIndent","deepOrange","A100","A200","A400","A700","getCommentsAsync","CommentsActionTypes","GET_COMMENTS_START","getCommentsStart","comments","GET_COMMENTS_SUCCESS","GET_COMMENTS_FAILURE","createCommentAsync","comment","CREATE_COMMENT_START","createCommentStart","commentsArr","lastId","length","commentObj","CREATE_COMMENT_SUCCESS","CREATE_COMMENT_FAILURE","updateCommentAsync","UPDATE_COMMENT_START","updateCommentStart","UPDATE_COMMENT_SUCCESS","UPDATE_COMMENT_FAILURE","deleteCommentAsync","commentId","DELETE_COMMENT_START","DELETE_COMMENT_SUCCESS","deleteCommentSuccess","DELETE_COMMENT_FAILURE","selectComments","selectPostComments","useStyles","makeStyles","heading","fontWeight","fontWeightRegular","details","flexDirection","orange","getContrastText","mapStateToProps","createStructuredSelector","connect","getPostAsyncProp","getCommentsAsyncProp","deleteCommentAsyncProp","updateCommentAsyncProp","createCommentAsyncProp","t","useTranslation","useParams","useState","editCommentId","setEditCommentId","commentName","setCommentName","commentEmail","setCommentEmail","commentBody","setCommentBody","useEffect","handleFieldChange","target","resetState","Container","maxWidth","title","body","ExpandMore","Typography","map","split","item","charAt","join","toUpperCase","email","initCommentEdit","Edit","Delete","TextField","label","multiline","maxRows","Button","editComment","Number","startIcon","Add"],"mappings":"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","file":"static/js/6.5b27fb47.chunk.js","sourcesContent":["/* eslint-disable no-underscore-dangle */\nimport axios from 'axios'\n\nconst baseUrl = process.env.REACT_APP_API_BASE_URL\n\nexport const postRequest = (url, data, config = {}) =>\n  axios.post(`${baseUrl}${url}`, data, config)\n\nexport const patch = (url, data, config = {}) =>\n  axios.patch(`${baseUrl}${url}`, data, config)\n\nexport const putRequest = (url, data, config = {}) =>\n  axios.put(`${baseUrl}${url}`, data, config)\n\nexport const get = (url, config = {}) => axios.get(`${baseUrl}${url}`, config)\n\nexport const remove = (url, config = {}) =>\n  axios.delete(`${baseUrl}${url}`, config)\n","/* eslint-disable react-hooks/rules-of-hooks */\nimport { useTranslation } from 'react-i18next'\n\nexport const rtlClass = () => {\n  const { i18n } = useTranslation()\n  return i18n.dir() === 'rtl' ? 'rtl' : ''\n}\n\nconst loadingDiv = document.getElementById('tyro-page-loader')\nconst loadingText = document.getElementById('tyro-page-loader-text')\n\nexport const showSpinner = (spinnerText = 'Loading...') => {\n  loadingDiv.style.visibility = 'visible'\n  loadingText.innerText = spinnerText\n}\n\nexport const hideSpinner = () => {\n  loadingDiv.style.visibility = 'hidden'\n  loadingText.innerText = ''\n}\n","import PostsActionTypes from './posts.types'\nimport { get, putRequest, remove, postRequest } from '../../assets/utils/api'\nimport { showSpinner, hideSpinner } from '../../assets/utils/utils'\n\nexport const getPostsStart = () => ({\n  type: PostsActionTypes.GET_POSTS_START,\n})\n\nexport const getPostsSuccess = (posts) => ({\n  type: PostsActionTypes.GET_POSTS_SUCCESS,\n  payload: posts,\n})\n\nexport const getPostsFailure = (error) => ({\n  type: PostsActionTypes.GET_POSTS_FAILURE,\n  payload: error,\n})\n\nexport const getPostsAsync = () => (dispatch) => {\n  dispatch(getPostsStart())\n  showSpinner()\n  get('/posts')\n    .then((res) => {\n      dispatch(getPostsSuccess(res.data))\n      hideSpinner()\n    })\n    .catch((err) => {\n      dispatch(getPostsFailure(err.message))\n      hideSpinner()\n    })\n}\n\nexport const getPostStart = (id) => ({\n  type: PostsActionTypes.GET_POST_START,\n  payload: id,\n})\n\nexport const getPostSuccess = (post) => ({\n  type: PostsActionTypes.GET_POST_SUCCESS,\n  payload: post,\n})\n\nexport const getPostFailure = (error) => ({\n  type: PostsActionTypes.GET_POST_FAILURE,\n  payload: error,\n})\n\nexport const getPostAsync = (params) => (dispatch) => {\n  dispatch(getPostStart())\n  showSpinner()\n  get(`/posts/${params}`)\n    .then((res) => {\n      dispatch(getPostSuccess(res.data))\n      hideSpinner()\n    })\n    .catch((err) => {\n      dispatch(getPostFailure(err.message))\n      hideSpinner()\n    })\n}\n\nexport const createPostStart = () => ({\n  type: PostsActionTypes.CREATE_POST_START,\n})\n\nexport const createPostSuccess = (payload) => ({\n  type: PostsActionTypes.CREATE_POST_SUCCESS,\n  payload,\n})\n\nexport const createPostFailure = (error) => ({\n  type: PostsActionTypes.CREATE_POST_FAILURE,\n  payload: error,\n})\n\nexport const createPostAsync = (post) => (dispatch, getState) => {\n  dispatch(createPostStart())\n  showSpinner()\n  postRequest(`/posts`, post)\n    .then(() => {\n      const { posts } = getState().posts\n      dispatch(\n        createPostSuccess({\n          object: post,\n          objects: posts,\n        }),\n      )\n      hideSpinner()\n    })\n    .catch((err) => {\n      dispatch(createPostFailure(err.message))\n      hideSpinner()\n    })\n}\n\nexport const updatePostStart = () => ({\n  type: PostsActionTypes.UPDATE_POST_START,\n})\n\nexport const updatePostSuccess = (payload) => ({\n  type: PostsActionTypes.UPDATE_POST_SUCCESS,\n  payload,\n})\n\nexport const updatePostFailure = (error) => ({\n  type: PostsActionTypes.UPDATE_POST_FAILURE,\n  payload: error,\n})\n\nexport const updatePostAsync = (post) => (dispatch, getState) => {\n  dispatch(updatePostStart())\n  showSpinner()\n  putRequest(`/posts/${post.id}`, post)\n    .then(() => {\n      dispatch(\n        updatePostSuccess({\n          object: post,\n          objects: getState().posts.posts,\n        }),\n      )\n      hideSpinner()\n    })\n    .catch((err) => {\n      dispatch(updatePostFailure(err.message))\n      hideSpinner()\n    })\n}\n\nexport const deletePostStart = () => ({\n  type: PostsActionTypes.DELETE_POST_START,\n})\n\nexport const deletePostSuccess = (payload) => ({\n  type: PostsActionTypes.DELETE_POST_SUCCESS,\n  payload,\n})\n\nexport const deletePostFailure = (error) => ({\n  type: PostsActionTypes.DELETE_POST_FAILURE,\n  payload: error,\n})\n\nexport const deletePostAsync = (postId) => (dispatch, getState) => {\n  dispatch(deletePostStart())\n  showSpinner()\n  remove(`/posts/${postId}`)\n    .then(() => {\n      dispatch(\n        deletePostSuccess({\n          objectId: postId,\n          objects: getState().posts.posts,\n        }),\n      )\n      hideSpinner()\n    })\n    .catch((err) => {\n      dispatch(deletePostFailure(err.message))\n      hideSpinner()\n    })\n}\n","import { createSelector } from 'reselect'\n\nconst selectPosts = (state) => state.posts\n\nexport const selectBlogPosts = createSelector(\n  [selectPosts],\n  (posts) => posts.posts,\n)\n\nexport const selectPostsError = createSelector(\n  [selectPosts],\n  (posts) => posts.getPostsError,\n)\n\nexport const selectPost = createSelector([selectPosts], (posts) => posts.post)\n\nexport const selectPostError = createSelector(\n  [selectPosts],\n  (posts) => posts.getPostError,\n)\n","import * as React from 'react';\n/**\n * @ignore - internal component.\n * @type {React.Context<{} | {expanded: boolean, disabled: boolean, toggle: () => void}>}\n */\n\nvar AccordionContext = React.createContext({});\n\nif (process.env.NODE_ENV !== 'production') {\n  AccordionContext.displayName = 'AccordionContext';\n}\n\nexport default AccordionContext;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _toArray from \"@babel/runtime/helpers/esm/toArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport { isFragment } from 'react-is';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { chainPropTypes } from '@material-ui/utils';\nimport Collapse from '../Collapse';\nimport Paper from '../Paper';\nimport withStyles from '../styles/withStyles';\nimport AccordionContext from './AccordionContext';\nimport useControlled from '../utils/useControlled';\nexport var styles = function styles(theme) {\n  var transition = {\n    duration: theme.transitions.duration.shortest\n  };\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      position: 'relative',\n      transition: theme.transitions.create(['margin'], transition),\n      '&:before': {\n        position: 'absolute',\n        left: 0,\n        top: -1,\n        right: 0,\n        height: 1,\n        content: '\"\"',\n        opacity: 1,\n        backgroundColor: theme.palette.divider,\n        transition: theme.transitions.create(['opacity', 'background-color'], transition)\n      },\n      '&:first-child': {\n        '&:before': {\n          display: 'none'\n        }\n      },\n      '&$expanded': {\n        margin: '16px 0',\n        '&:first-child': {\n          marginTop: 0\n        },\n        '&:last-child': {\n          marginBottom: 0\n        },\n        '&:before': {\n          opacity: 0\n        }\n      },\n      '&$expanded + &': {\n        '&:before': {\n          display: 'none'\n        }\n      },\n      '&$disabled': {\n        backgroundColor: theme.palette.action.disabledBackground\n      }\n    },\n\n    /* Styles applied to the root element if `square={false}`. */\n    rounded: {\n      borderRadius: 0,\n      '&:first-child': {\n        borderTopLeftRadius: theme.shape.borderRadius,\n        borderTopRightRadius: theme.shape.borderRadius\n      },\n      '&:last-child': {\n        borderBottomLeftRadius: theme.shape.borderRadius,\n        borderBottomRightRadius: theme.shape.borderRadius,\n        // Fix a rendering issue on Edge\n        '@supports (-ms-ime-align: auto)': {\n          borderBottomLeftRadius: 0,\n          borderBottomRightRadius: 0\n        }\n      }\n    },\n\n    /* Styles applied to the root element if `expanded={true}`. */\n    expanded: {},\n\n    /* Styles applied to the root element if `disabled={true}`. */\n    disabled: {}\n  };\n};\nvar Accordion = /*#__PURE__*/React.forwardRef(function Accordion(props, ref) {\n  var childrenProp = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$defaultExpande = props.defaultExpanded,\n      defaultExpanded = _props$defaultExpande === void 0 ? false : _props$defaultExpande,\n      _props$disabled = props.disabled,\n      disabled = _props$disabled === void 0 ? false : _props$disabled,\n      expandedProp = props.expanded,\n      onChange = props.onChange,\n      _props$square = props.square,\n      square = _props$square === void 0 ? false : _props$square,\n      _props$TransitionComp = props.TransitionComponent,\n      TransitionComponent = _props$TransitionComp === void 0 ? Collapse : _props$TransitionComp,\n      TransitionProps = props.TransitionProps,\n      other = _objectWithoutProperties(props, [\"children\", \"classes\", \"className\", \"defaultExpanded\", \"disabled\", \"expanded\", \"onChange\", \"square\", \"TransitionComponent\", \"TransitionProps\"]);\n\n  var _useControlled = useControlled({\n    controlled: expandedProp,\n    default: defaultExpanded,\n    name: 'Accordion',\n    state: 'expanded'\n  }),\n      _useControlled2 = _slicedToArray(_useControlled, 2),\n      expanded = _useControlled2[0],\n      setExpandedState = _useControlled2[1];\n\n  var handleChange = React.useCallback(function (event) {\n    setExpandedState(!expanded);\n\n    if (onChange) {\n      onChange(event, !expanded);\n    }\n  }, [expanded, onChange, setExpandedState]);\n\n  var _React$Children$toArr = React.Children.toArray(childrenProp),\n      _React$Children$toArr2 = _toArray(_React$Children$toArr),\n      summary = _React$Children$toArr2[0],\n      children = _React$Children$toArr2.slice(1);\n\n  var contextValue = React.useMemo(function () {\n    return {\n      expanded: expanded,\n      disabled: disabled,\n      toggle: handleChange\n    };\n  }, [expanded, disabled, handleChange]);\n  return /*#__PURE__*/React.createElement(Paper, _extends({\n    className: clsx(classes.root, className, expanded && classes.expanded, disabled && classes.disabled, !square && classes.rounded),\n    ref: ref,\n    square: square\n  }, other), /*#__PURE__*/React.createElement(AccordionContext.Provider, {\n    value: contextValue\n  }, summary), /*#__PURE__*/React.createElement(TransitionComponent, _extends({\n    in: expanded,\n    timeout: \"auto\"\n  }, TransitionProps), /*#__PURE__*/React.createElement(\"div\", {\n    \"aria-labelledby\": summary.props.id,\n    id: summary.props['aria-controls'],\n    role: \"region\"\n  }, children)));\n});\nprocess.env.NODE_ENV !== \"production\" ? Accordion.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the accordion.\n   */\n  children: chainPropTypes(PropTypes.node.isRequired, function (props) {\n    var summary = React.Children.toArray(props.children)[0];\n\n    if (isFragment(summary)) {\n      return new Error(\"Material-UI: The Accordion doesn't accept a Fragment as a child. \" + 'Consider providing an array instead.');\n    }\n\n    if (! /*#__PURE__*/React.isValidElement(summary)) {\n      return new Error('Material-UI: Expected the first child of Accordion to be a valid element.');\n    }\n\n    return null;\n  }),\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * If `true`, expands the accordion by default.\n   */\n  defaultExpanded: PropTypes.bool,\n\n  /**\n   * If `true`, the accordion will be displayed in a disabled state.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, expands the accordion, otherwise collapse it.\n   * Setting this prop enables control over the accordion.\n   */\n  expanded: PropTypes.bool,\n\n  /**\n   * Callback fired when the expand/collapse state is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * @param {boolean} expanded The `expanded` state of the accordion.\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * If `true`, rounded corners are disabled.\n   */\n  square: PropTypes.bool,\n\n  /**\n   * The component used for the collapse effect.\n   * [Follow this guide](/components/transitions/#transitioncomponent-prop) to learn more about the requirements for this component.\n   */\n  TransitionComponent: PropTypes.elementType,\n\n  /**\n   * Props applied to the [`Transition`](http://reactcommunity.org/react-transition-group/transition#Transition-props) element.\n   */\n  TransitionProps: PropTypes.object\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiAccordion'\n})(Accordion);","import arrayWithHoles from \"./arrayWithHoles.js\";\nimport iterableToArray from \"./iterableToArray.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableRest from \"./nonIterableRest.js\";\nexport default function _toArray(arr) {\n  return arrayWithHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableRest();\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\n\n/* eslint-disable jsx-a11y/aria-role */\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { chainPropTypes } from '@material-ui/utils';\nimport ButtonBase from '../ButtonBase';\nimport IconButton from '../IconButton';\nimport withStyles from '../styles/withStyles';\nimport AccordionContext from '../Accordion/AccordionContext';\nexport var styles = function styles(theme) {\n  var transition = {\n    duration: theme.transitions.duration.shortest\n  };\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      display: 'flex',\n      minHeight: 8 * 6,\n      transition: theme.transitions.create(['min-height', 'background-color'], transition),\n      padding: theme.spacing(0, 2),\n      '&:hover:not($disabled)': {\n        cursor: 'pointer'\n      },\n      '&$expanded': {\n        minHeight: 64\n      },\n      '&$focused, &$focusVisible': {\n        backgroundColor: theme.palette.action.focus\n      },\n      '&$disabled': {\n        opacity: theme.palette.action.disabledOpacity\n      }\n    },\n\n    /* Pseudo-class applied to the root element, children wrapper element and `IconButton` component if `expanded={true}`. */\n    expanded: {},\n\n    /* Pseudo-class applied to the ButtonBase root element if the button is keyboard focused. */\n    focused: {},\n\n    /* Pseudo-class applied to the ButtonBase root element if the button is keyboard focused. */\n    focusVisible: {},\n\n    /* Pseudo-class applied to the root element if `disabled={true}`. */\n    disabled: {},\n\n    /* Styles applied to the children wrapper element. */\n    content: {\n      display: 'flex',\n      flexGrow: 1,\n      transition: theme.transitions.create(['margin'], transition),\n      margin: '12px 0',\n      '&$expanded': {\n        margin: '20px 0'\n      }\n    },\n\n    /* Styles applied to the `IconButton` component when `expandIcon` is supplied. */\n    expandIcon: {\n      transform: 'rotate(0deg)',\n      transition: theme.transitions.create('transform', transition),\n      '&:hover': {\n        // Disable the hover effect for the IconButton,\n        // because a hover effect should apply to the entire Expand button and\n        // not only to the IconButton.\n        backgroundColor: 'transparent'\n      },\n      '&$expanded': {\n        transform: 'rotate(180deg)'\n      }\n    }\n  };\n};\nvar AccordionSummary = /*#__PURE__*/React.forwardRef(function AccordionSummary(props, ref) {\n  var children = props.children,\n      classes = props.classes,\n      className = props.className,\n      expandIcon = props.expandIcon,\n      focusVisibleClassName = props.focusVisibleClassName,\n      _props$IconButtonProp = props.IconButtonProps,\n      IconButtonProps = _props$IconButtonProp === void 0 ? {} : _props$IconButtonProp,\n      onClick = props.onClick,\n      other = _objectWithoutProperties(props, [\"children\", \"classes\", \"className\", \"expandIcon\", \"focusVisibleClassName\", \"IconButtonProps\", \"onClick\"]);\n\n  var _React$useContext = React.useContext(AccordionContext),\n      _React$useContext$dis = _React$useContext.disabled,\n      disabled = _React$useContext$dis === void 0 ? false : _React$useContext$dis,\n      expanded = _React$useContext.expanded,\n      toggle = _React$useContext.toggle;\n\n  var handleChange = function handleChange(event) {\n    if (toggle) {\n      toggle(event);\n    }\n\n    if (onClick) {\n      onClick(event);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(ButtonBase, _extends({\n    focusRipple: false,\n    disableRipple: true,\n    disabled: disabled,\n    component: \"div\",\n    \"aria-expanded\": expanded,\n    className: clsx(classes.root, className, disabled && classes.disabled, expanded && classes.expanded),\n    focusVisibleClassName: clsx(classes.focusVisible, classes.focused, focusVisibleClassName),\n    onClick: handleChange,\n    ref: ref\n  }, other), /*#__PURE__*/React.createElement(\"div\", {\n    className: clsx(classes.content, expanded && classes.expanded)\n  }, children), expandIcon && /*#__PURE__*/React.createElement(IconButton, _extends({\n    className: clsx(classes.expandIcon, expanded && classes.expanded),\n    edge: \"end\",\n    component: \"div\",\n    tabIndex: null,\n    role: null,\n    \"aria-hidden\": true\n  }, IconButtonProps), expandIcon));\n});\nprocess.env.NODE_ENV !== \"production\" ? AccordionSummary.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the accordion summary.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: chainPropTypes(PropTypes.object, function (props) {\n    // Guard against when generation of classes is disabled in the stylesheets (`disableGeneration`).\n    // For `disableGeneration` we don't have an accurate warning but `disableGeneration` is an advanced use case anyway.\n    if (props.classes.focused !== undefined && props.classes.focused.indexOf(' ') !== -1) {\n      return new Error(['Material-UI: The `classes.focused` key is deprecated.', 'Use `classes.focusVisible` instead.', 'The name of the pseudo-class was changed for consistency.'].join('\\n'));\n    }\n\n    return null;\n  }),\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The icon to display as the expand indicator.\n   */\n  expandIcon: PropTypes.node,\n\n  /**\n   * This prop can help identify which element has keyboard focus.\n   * The class name will be applied when the element gains the focus through keyboard interaction.\n   * It's a polyfill for the [CSS :focus-visible selector](https://drafts.csswg.org/selectors-4/#the-focus-visible-pseudo).\n   * The rationale for using this feature [is explained here](https://github.com/WICG/focus-visible/blob/master/explainer.md).\n   * A [polyfill can be used](https://github.com/WICG/focus-visible) to apply a `focus-visible` class to other components\n   * if needed.\n   */\n  focusVisibleClassName: PropTypes.string,\n\n  /**\n   * Props applied to the `IconButton` element wrapping the expand icon.\n   */\n  IconButtonProps: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  onClick: PropTypes.func\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiAccordionSummary'\n})(AccordionSummary);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      display: 'flex',\n      padding: theme.spacing(1, 2, 2)\n    }\n  };\n};\nvar AccordionDetails = /*#__PURE__*/React.forwardRef(function AccordionDetails(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\"]);\n\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    className: clsx(classes.root, className),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? AccordionDetails.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the accordion details.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiAccordionDetails'\n})(AccordionDetails);","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M12 12c2.21 0 4-1.79 4-4s-1.79-4-4-4-4 1.79-4 4 1.79 4 4 4zm0 2c-2.67 0-8 1.34-8 4v2h16v-2c0-2.66-5.33-4-8-4z\"\n}), 'Person');","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { chainPropTypes } from '@material-ui/utils';\nimport withStyles from '../styles/withStyles';\nimport Person from '../internal/svg-icons/Person';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      position: 'relative',\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n      flexShrink: 0,\n      width: 40,\n      height: 40,\n      fontFamily: theme.typography.fontFamily,\n      fontSize: theme.typography.pxToRem(20),\n      lineHeight: 1,\n      borderRadius: '50%',\n      overflow: 'hidden',\n      userSelect: 'none'\n    },\n\n    /* Styles applied to the root element if not `src` or `srcSet`. */\n    colorDefault: {\n      color: theme.palette.background.default,\n      backgroundColor: theme.palette.type === 'light' ? theme.palette.grey[400] : theme.palette.grey[600]\n    },\n\n    /* Styles applied to the root element if `variant=\"circle\"`. */\n    circle: {},\n\n    /* Styles applied to the root element if `variant=\"circular\"`. */\n    circular: {},\n\n    /* Styles applied to the root element if `variant=\"rounded\"`. */\n    rounded: {\n      borderRadius: theme.shape.borderRadius\n    },\n\n    /* Styles applied to the root element if `variant=\"square\"`. */\n    square: {\n      borderRadius: 0\n    },\n\n    /* Styles applied to the img element if either `src` or `srcSet` is defined. */\n    img: {\n      width: '100%',\n      height: '100%',\n      textAlign: 'center',\n      // Handle non-square image. The property isn't supported by IE 11.\n      objectFit: 'cover',\n      // Hide alt text.\n      color: 'transparent',\n      // Hide the image broken icon, only works on Chrome.\n      textIndent: 10000\n    },\n\n    /* Styles applied to the fallback icon */\n    fallback: {\n      width: '75%',\n      height: '75%'\n    }\n  };\n};\n\nfunction useLoaded(_ref) {\n  var src = _ref.src,\n      srcSet = _ref.srcSet;\n\n  var _React$useState = React.useState(false),\n      loaded = _React$useState[0],\n      setLoaded = _React$useState[1];\n\n  React.useEffect(function () {\n    if (!src && !srcSet) {\n      return undefined;\n    }\n\n    setLoaded(false);\n    var active = true;\n    var image = new Image();\n    image.src = src;\n    image.srcSet = srcSet;\n\n    image.onload = function () {\n      if (!active) {\n        return;\n      }\n\n      setLoaded('loaded');\n    };\n\n    image.onerror = function () {\n      if (!active) {\n        return;\n      }\n\n      setLoaded('error');\n    };\n\n    return function () {\n      active = false;\n    };\n  }, [src, srcSet]);\n  return loaded;\n}\n\nvar Avatar = /*#__PURE__*/React.forwardRef(function Avatar(props, ref) {\n  var alt = props.alt,\n      childrenProp = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      imgProps = props.imgProps,\n      sizes = props.sizes,\n      src = props.src,\n      srcSet = props.srcSet,\n      _props$variant = props.variant,\n      variant = _props$variant === void 0 ? 'circular' : _props$variant,\n      other = _objectWithoutProperties(props, [\"alt\", \"children\", \"classes\", \"className\", \"component\", \"imgProps\", \"sizes\", \"src\", \"srcSet\", \"variant\"]);\n\n  var children = null; // Use a hook instead of onError on the img element to support server-side rendering.\n\n  var loaded = useLoaded({\n    src: src,\n    srcSet: srcSet\n  });\n  var hasImg = src || srcSet;\n  var hasImgNotFailing = hasImg && loaded !== 'error';\n\n  if (hasImgNotFailing) {\n    children = /*#__PURE__*/React.createElement(\"img\", _extends({\n      alt: alt,\n      src: src,\n      srcSet: srcSet,\n      sizes: sizes,\n      className: classes.img\n    }, imgProps));\n  } else if (childrenProp != null) {\n    children = childrenProp;\n  } else if (hasImg && alt) {\n    children = alt[0];\n  } else {\n    children = /*#__PURE__*/React.createElement(Person, {\n      className: classes.fallback\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, classes.system, classes[variant], className, !hasImgNotFailing && classes.colorDefault),\n    ref: ref\n  }, other), children);\n});\nprocess.env.NODE_ENV !== \"production\" ? Avatar.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * Used in combination with `src` or `srcSet` to\n   * provide an alt attribute for the rendered `img` element.\n   */\n  alt: PropTypes.string,\n\n  /**\n   * Used to render icon or text elements inside the Avatar if `src` is not set.\n   * This can be an element, or just a string.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: chainPropTypes(PropTypes.object, function (props) {\n    var classes = props.classes;\n\n    if (classes == null) {\n      return null;\n    }\n\n    if (classes.circle != null && // 2 classnames? one from withStyles the other must be custom\n    classes.circle.split(' ').length > 1) {\n      throw new Error(\"Material-UI: The `circle` class is deprecated. Use `circular` instead.\");\n    }\n\n    return null;\n  }),\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * Attributes applied to the `img` element if the component is used to display an image.\n   * It can be used to listen for the loading error event.\n   */\n  imgProps: PropTypes.object,\n\n  /**\n   * The `sizes` attribute for the `img` element.\n   */\n  sizes: PropTypes.string,\n\n  /**\n   * The `src` attribute for the `img` element.\n   */\n  src: PropTypes.string,\n\n  /**\n   * The `srcSet` attribute for the `img` element.\n   * Use this attribute for responsive image display.\n   */\n  srcSet: PropTypes.string,\n\n  /**\n   * The shape of the avatar.\n   */\n  variant: chainPropTypes(PropTypes.oneOf(['circle', 'circular', 'rounded', 'square']), function (props) {\n    var variant = props.variant;\n\n    if (variant === 'circle') {\n      throw new Error('Material-UI: `variant=\"circle\"` is deprecated. Use `variant=\"circular\"` instead.');\n    }\n\n    return null;\n  })\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiAvatar'\n})(Avatar);","var deepOrange = {\n  50: '#fbe9e7',\n  100: '#ffccbc',\n  200: '#ffab91',\n  300: '#ff8a65',\n  400: '#ff7043',\n  500: '#ff5722',\n  600: '#f4511e',\n  700: '#e64a19',\n  800: '#d84315',\n  900: '#bf360c',\n  A100: '#ff9e80',\n  A200: '#ff6e40',\n  A400: '#ff3d00',\n  A700: '#dd2c00'\n};\nexport default deepOrange;","import * as React from 'react';\nimport createSvgIcon from './utils/createSvgIcon';\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M16.59 8.59L12 13.17 7.41 8.59 6 10l6 6 6-6z\"\n}), 'ExpandMore');","import * as React from 'react';\nimport createSvgIcon from './utils/createSvgIcon';\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M3 17.25V21h3.75L17.81 9.94l-3.75-3.75L3 17.25zM20.71 7.04c.39-.39.39-1.02 0-1.41l-2.34-2.34a.9959.9959 0 00-1.41 0l-1.83 1.83 3.75 3.75 1.83-1.83z\"\n}), 'Edit');","import * as React from 'react';\nimport createSvgIcon from './utils/createSvgIcon';\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zM19 4h-3.5l-1-1h-5l-1 1H5v2h14V4z\"\n}), 'Delete');","import CommentsActionTypes from './comments.types'\nimport { get, postRequest, putRequest, remove } from '../../assets/utils/api'\nimport { showSpinner, hideSpinner } from '../../assets/utils/utils'\n\nexport const getCommentsStart = (postId) => ({\n  type: CommentsActionTypes.GET_COMMENTS_START,\n  payload: postId,\n})\n\nexport const getCommentsSuccess = (comments) => ({\n  type: CommentsActionTypes.GET_COMMENTS_SUCCESS,\n  payload: comments,\n})\n\nexport const getCommentsFailure = (error) => ({\n  type: CommentsActionTypes.GET_COMMENTS_FAILURE,\n  payload: error,\n})\n\nexport const getCommentsAsync = (postId) => (dispatch) => {\n  dispatch(getCommentsStart())\n  showSpinner()\n  get(`/comments?postId=${postId}`)\n    .then((res) => {\n      dispatch(getCommentsSuccess(res.data))\n      hideSpinner()\n    })\n    .catch((err) => {\n      dispatch(getCommentsFailure(err.message))\n      hideSpinner()\n    })\n}\n\nexport const createCommentStart = (comment) => ({\n  type: CommentsActionTypes.CREATE_COMMENT_START,\n  payload: comment,\n})\n\nexport const createCommentSuccess = (payload) => ({\n  type: CommentsActionTypes.CREATE_COMMENT_SUCCESS,\n  payload,\n})\n\nexport const createCommentFailure = (error) => ({\n  type: CommentsActionTypes.CREATE_COMMENT_FAILURE,\n  payload: error,\n})\n\nexport const createCommentAsync = (comment) => (dispatch, getState) => {\n  dispatch(createCommentStart())\n  showSpinner()\n  postRequest(`/comments`, comment)\n    .then(() => {\n      const { commentsArr } = getState().comments\n      const lastId =\n        commentsArr && commentsArr.length > 0\n          ? commentsArr[commentsArr.length - 1].id\n          : 0\n      const commentObj = { ...comment, id: lastId + 1 }\n      dispatch(\n        createCommentSuccess({\n          object: commentObj,\n          objects: commentsArr,\n        }),\n      )\n      hideSpinner()\n    })\n    .catch((err) => {\n      dispatch(createCommentFailure(err.message))\n      hideSpinner()\n    })\n}\n\nexport const updateCommentStart = (comment) => ({\n  type: CommentsActionTypes.UPDATE_COMMENT_START,\n  payload: comment,\n})\n\nexport const updateCommentSuccess = (payload) => ({\n  type: CommentsActionTypes.UPDATE_COMMENT_SUCCESS,\n  payload,\n})\n\nexport const updateCommentFailure = (error) => ({\n  type: CommentsActionTypes.UPDATE_COMMENT_FAILURE,\n  payload: error,\n})\n\nexport const updateCommentAsync = (comment) => (dispatch, getState) => {\n  dispatch(updateCommentStart())\n  showSpinner()\n  putRequest(`/comments/${comment.id}`, comment)\n    .then(() => {\n      dispatch(\n        updateCommentSuccess({\n          object: comment,\n          objects: getState().comments.commentsArr,\n        }),\n      )\n      hideSpinner()\n    })\n    .catch((err) => {\n      dispatch(updateCommentFailure(err.message))\n      hideSpinner()\n    })\n}\n\nexport const deleteCommentStart = (payload) => ({\n  type: CommentsActionTypes.DELETE_COMMENT_START,\n  payload,\n})\n\nexport const deleteCommentSuccess = (payload) => ({\n  type: CommentsActionTypes.DELETE_COMMENT_SUCCESS,\n  payload,\n})\n\nexport const deleteCommentFailure = (error) => ({\n  type: CommentsActionTypes.DELETE_COMMENT_FAILURE,\n  payload: error,\n})\n\nexport const deleteCommentAsync = (commentId) => (dispatch, getState) => {\n  dispatch(deleteCommentStart())\n  showSpinner()\n  remove(`/comments/${commentId}`)\n    .then(() => {\n      dispatch(\n        deleteCommentSuccess({\n          objectId: commentId,\n          objects: getState().comments.commentsArr,\n        }),\n      )\n      hideSpinner()\n    })\n    .catch((err) => {\n      dispatch(deleteCommentFailure(err.message))\n      hideSpinner()\n    })\n}\n","import { createSelector } from 'reselect'\n\nconst selectComments = (state) => state.comments\n\nexport const selectPostComments = createSelector(\n  [selectComments],\n  (comments) => comments.commentsArr,\n)\n\nexport const selectCommentsError = createSelector(\n  [selectComments],\n  (comments) => comments.getPostsError,\n)\n","import React, { useEffect, useState } from 'react'\nimport { connect } from 'react-redux'\nimport { createStructuredSelector } from 'reselect'\nimport PropTypes from 'prop-types'\nimport {\n  Container,\n  Accordion,\n  AccordionSummary,\n  AccordionDetails,\n  Typography,\n  Avatar,\n  IconButton,\n  TextField,\n  Button,\n} from '@material-ui/core'\nimport { deepOrange } from '@material-ui/core/colors'\nimport { makeStyles } from '@material-ui/core/styles'\nimport { ExpandMore, Edit, Delete, Add } from '@material-ui/icons'\nimport { useParams } from 'react-router-dom'\nimport { useTranslation } from 'react-i18next'\n\nimport { getPostAsync } from '../../redux/posts/posts.actions'\nimport { selectPost } from '../../redux/posts/posts.selectors'\nimport {\n  createCommentAsync,\n  deleteCommentAsync,\n  getCommentsAsync,\n  updateCommentAsync,\n} from '../../redux/comments/comments.actions'\nimport { selectPostComments } from '../../redux/comments/comments.selectors'\n\nimport './post.styles.scss'\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: '100%',\n  },\n  heading: {\n    fontSize: '1.4rem',\n    fontWeight: theme.typography.fontWeightRegular,\n  },\n  details: {\n    flexDirection: 'column',\n    fontSize: '1.4rem',\n  },\n  orange: {\n    color: theme.palette.getContrastText(deepOrange[500]),\n    backgroundColor: deepOrange[500],\n    margin: '0 1rem',\n  },\n}))\n/**\n * Post Functional Component to view post and comments and edit them\n * @date 2022-03-07\n *\n * @param {func} getPostAsyncProp function to get post\n * @param {object} post post object\n * @param {func} getCommentsAsyncProp function to get comments\n * @param {object} comments comments object\n * @param {func} deleteCommentAsyncProp function to delete comment\n * @param {func} updateCommentAsyncProp function to update comment\n * @param {func} createCommentAsyncProp function to create comment\n *\n * @returns {JSX}\n */\nconst Post = ({\n  getPostAsyncProp,\n  post,\n  getCommentsAsyncProp,\n  comments,\n  deleteCommentAsyncProp,\n  updateCommentAsyncProp,\n  createCommentAsyncProp,\n}) => {\n  const classes = useStyles()\n  const { t } = useTranslation()\n  const { id } = useParams()\n  const [editCommentId, setEditCommentId] = useState(null)\n  const [commentName, setCommentName] = useState(null)\n  const [commentEmail, setCommentEmail] = useState(null)\n  const [commentBody, setCommentBody] = useState(null)\n\n  useEffect(() => {\n    if (id) {\n      getPostAsyncProp(id)\n      getCommentsAsyncProp(id)\n    }\n  }, [id])\n\n  /**\n   * getNameLetters Function get the first two letters of the string and upperCase them\n   * @date 2022-03-07\n   *\n   * @param {string} name\n   *\n   * @returns {string}\n   */\n  const getNameLetters = (name) =>\n    name\n      .split(' ', 2)\n      .map((item) => item.charAt(0))\n      .join('')\n      .toUpperCase()\n\n  /**\n   * editComment function\n   * @date 2022-03-07\n   * @param {object} comment comment to be edited\n   * @returns {}\n   */\n  const initCommentEdit = (comment) => {\n    setEditCommentId(comment.id)\n    setCommentName(comment.name)\n    setCommentEmail(comment.email)\n    setCommentBody(comment.body)\n  }\n\n  const handleFieldChange = (event) => {\n    if (!event || !event.target.value) return\n    switch (event.target.name) {\n      case 'name':\n        setCommentName(event.target.value)\n        break\n      case 'email':\n        setCommentEmail(event.target.value)\n        break\n      case 'body':\n        setCommentBody(event.target.value)\n        break\n      default:\n        break\n    }\n  }\n\n  const editComment = (comment) => {\n    const commentObj = {\n      body: commentBody,\n      email: commentEmail,\n      id: comment.id,\n      name: commentName,\n      postId: comment.postId,\n    }\n    updateCommentAsyncProp(commentObj)\n    resetState()\n  }\n\n  const initCreateComment = () => {\n    setEditCommentId('new')\n    setCommentName('')\n    setCommentEmail('')\n    setCommentBody('')\n  }\n\n  const createComment = () => {\n    const commentObj = {\n      body: commentBody,\n      email: commentEmail,\n      name: commentName,\n      postId: Number(id),\n    }\n    createCommentAsyncProp(commentObj)\n    resetState()\n  }\n\n  const resetState = () => {\n    setEditCommentId(null)\n    setCommentName(null)\n    setCommentEmail(null)\n    setCommentBody(null)\n  }\n\n  /**\n   * deleteComment function\n   * @date 2022-03-07\n   * @param {string} commentId the commentId to be deleted\n   * @returns {}\n   */\n  const deleteComment = (commentId) => {\n    deleteCommentAsyncProp(commentId)\n  }\n  return (\n    <div>\n      {post && (\n        <Container className=\"post-container\" maxWidth=\"md\">\n          <div className=\"u-margin-bottom-medium\">\n            <h3 className=\"u-font-size-16 u-font-weight-bold u-color-title\">\n              {post.title}\n            </h3>\n            <div className=\"u-font-size-14  u-color-body\">{post.body}</div>\n          </div>\n          <div className={classes.root}>\n            <Accordion defaultExpanded>\n              <AccordionSummary\n                expandIcon={<ExpandMore />}\n                aria-controls=\"panel1a-content\"\n                id=\"panel1a-header\"\n              >\n                <Typography className={classes.heading}>\n                  {t('POST.COMMENTS')}\n                </Typography>\n              </AccordionSummary>\n              <AccordionDetails className={classes.details}>\n                {comments &&\n                  comments.length > 0 &&\n                  comments.map((comment) => (\n                    <div key={comment.id} className=\"comment-card__details\">\n                      <Avatar className={classes.orange}>\n                        {getNameLetters(comment.name)}\n                      </Avatar>\n\n                      {editCommentId !== comment.id && (\n                        <div className=\"comment-card__info\">\n                          <h3 className=\"comment-card__name u-font-size-16 u-font-weight-bold u-color-title\">\n                            {comment.name}\n                          </h3>\n                          <h5 className=\"comment-card__name u-font-size-12 u-font-weight-bold u-color-primary\">\n                            {comment.email}\n                          </h5>\n                          <div className=\"comment-card__body\">\n                            {comment.body}\n                          </div>\n                        </div>\n                      )}\n                      {!editCommentId && editCommentId !== 'new' && (\n                        <div className=\"comment-card__action\">\n                          <IconButton\n                            onClick={() => initCommentEdit(comment)}\n                            color=\"primary\"\n                            component=\"span\"\n                          >\n                            <Edit />\n                          </IconButton>\n                          <IconButton\n                            onClick={() => deleteComment(comment.id)}\n                            color=\"secondary\"\n                            component=\"span\"\n                          >\n                            <Delete />\n                          </IconButton>\n                        </div>\n                      )}\n                      {editCommentId === comment.id && (\n                        <div className=\"comment-card__form\">\n                          <div className=\"comment-card__form-fields\">\n                            <TextField\n                              id=\"name\"\n                              name=\"name\"\n                              label={t('POST.NAME')}\n                              value={commentName}\n                              onChange={handleFieldChange}\n                            />\n                            <TextField\n                              id=\"email\"\n                              name=\"email\"\n                              label={t('POST.EMAIL')}\n                              value={commentEmail}\n                              onChange={handleFieldChange}\n                            />\n                            <TextField\n                              id=\"body\"\n                              name=\"body\"\n                              label={t('POST.BODY')}\n                              value={commentBody}\n                              multiline\n                              maxRows={5}\n                              onChange={handleFieldChange}\n                            />\n                          </div>\n                          <div className=\"comment-card__form-actions\">\n                            <Button\n                              onClick={() => editComment(comment)}\n                              variant=\"contained\"\n                              color=\"primary\"\n                              className=\"comment-card__form-action\"\n                            >\n                              {t('POST.EDIT_COMMENT')}\n                            </Button>\n                            <Button\n                              onClick={resetState}\n                              variant=\"contained\"\n                              color=\"secondary\"\n                              className=\"comment-card__form-action\"\n                            >\n                              {t('POST.CANCEL')}\n                            </Button>\n                          </div>\n                        </div>\n                      )}\n                    </div>\n                  ))}\n                {editCommentId === 'new' && (\n                  <div className=\"comment-card__form\">\n                    <div className=\"comment-card__form-fields\">\n                      <TextField\n                        id=\"name\"\n                        name=\"name\"\n                        label={t('POST.NAME')}\n                        value={commentName}\n                        onChange={handleFieldChange}\n                      />\n                      <TextField\n                        id=\"email\"\n                        name=\"email\"\n                        label={t('POST.EMAIL')}\n                        value={commentEmail}\n                        onChange={handleFieldChange}\n                      />\n                      <TextField\n                        id=\"body\"\n                        name=\"body\"\n                        label={t('POST.BODY')}\n                        value={commentBody}\n                        multiline\n                        maxRows={5}\n                        onChange={handleFieldChange}\n                      />\n                    </div>\n                    <div className=\"comment-card__form-actions\">\n                      <Button\n                        onClick={createComment}\n                        variant=\"contained\"\n                        color=\"primary\"\n                        className=\"comment-card__form-action\"\n                      >\n                        {t('POST.SAVE_COMMENT')}\n                      </Button>\n                      <Button\n                        onClick={resetState}\n                        variant=\"contained\"\n                        color=\"secondary\"\n                        className=\"comment-card__form-action\"\n                      >\n                        {t('POST.CANCEL')}\n                      </Button>\n                    </div>\n                  </div>\n                )}\n                {!editCommentId && (\n                  <Button\n                    onClick={initCreateComment}\n                    variant=\"contained\"\n                    color=\"primary\"\n                    startIcon={<Add />}\n                  >\n                    {t('POST.ADD_COMMENT')}\n                  </Button>\n                )}\n              </AccordionDetails>\n            </Accordion>\n          </div>\n        </Container>\n      )}\n    </div>\n  )\n}\n\nPost.propTypes = {\n  getPostAsyncProp: PropTypes.func,\n  post: PropTypes.object,\n  getCommentsAsyncProp: PropTypes.func,\n  comments: PropTypes.array,\n  deleteCommentAsyncProp: PropTypes.func,\n  updateCommentAsyncProp: PropTypes.func,\n  createCommentAsyncProp: PropTypes.func,\n}\n\nconst mapStateToProps = createStructuredSelector({\n  post: selectPost,\n  comments: selectPostComments,\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n  getPostAsyncProp: (id) => dispatch(getPostAsync(id)),\n  getCommentsAsyncProp: (id) => dispatch(getCommentsAsync(id)),\n  deleteCommentAsyncProp: (id) => dispatch(deleteCommentAsync(id)),\n  updateCommentAsyncProp: (comment) => dispatch(updateCommentAsync(comment)),\n  createCommentAsyncProp: (comment) => dispatch(createCommentAsync(comment)),\n})\nexport default connect(mapStateToProps, mapDispatchToProps)(Post)\n"],"sourceRoot":""}